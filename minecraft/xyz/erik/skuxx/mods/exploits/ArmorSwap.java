package xyz.erik.skuxx.mods.exploits;

import xyz.erik.api.config.vals.Int;
import xyz.erik.api.helpers.ErikTimer;
import xyz.erik.api.mod.Mod;
import xyz.erik.skuxx.Skuxx;
import xyz.erik.skuxx.event.EventTarget;
import xyz.erik.skuxx.event.events.EventMotion;
import xyz.erik.skuxx.mods.Category;

public class ArmorSwap
extends Mod
{

    private int[] helmet;
    private int[] chestplate;
    private int[] leggings;
    private int[] boots;
    private Int delay;
    private ErikTimer erikTimer;
    public ArmorSwap() {
        setCategory(Category.EXPLOITS);
        delay = new Int("Delay",600,550,700);
        this.helmet = new int[] { 310, 306, 314, 302, 298 };
        this.chestplate = new int[] { 311, 307, 315, 303, 299 };
        this.leggings = new int[] { 312, 308, 316, 304, 300 };
        this.boots = new int[] { 313, 309, 317, 305, 301 };
        erikTimer = new ErikTimer();
        addSet(delay);
    }

    int wearArmor;
    @EventTarget
    private void onMotion(EventMotion eventMotion) {
        if (Skuxx.getInstance().getModManager().getMod("AutoArmor").getState()) {
                Skuxx.getInstance().getModManager().getMod("AutoArmor").toggle();
        }
        this.delay.setValue(110);

        if (erikTimer.delay(delay.getValue()) && !getPlayer().isEating()) {

            if (getPlayer().inventory.armorInventory[1] != null && getPlayer().getHealth() > 5) {
                getMinecraft().playerController.windowClick(0, 7, 5, 2, this.minecraft.thePlayer);
            } else {
                wearArmor();
            }



            erikTimer.reset();
        }
    }

    public void wearArmor() {
        int item = -1;
        if (this.getMinecraft().thePlayer.inventory.armorInventory[0] == null) {
            int[] boots;
            int length = (boots = this.boots).length;
            for (int i = 0; i < length; i++) {
                int id = boots[i];
                if (getPlayer().getItem(id) != -1) {
                    item = getPlayer().getItem(id);
                    break;
                }
            }
        }
    if (this.getMinecraft().thePlayer.inventory.armorInventory[1] == null)
    {
        int[] leggings;
        int length2 = (leggings = this.leggings).length;
        for (int j = 0; j < length2; j++)
        {
            int id = leggings[j];
            if (getPlayer().getItem(id) != -1)
            {
                item = getPlayer().getItem(id);
                break;
            }
        }
    }
    if (this.getMinecraft().thePlayer.inventory.armorInventory[2] == null)
    {
        int[] chestplate;
        int length3 = (chestplate = this.chestplate).length;
        for (int k = 0; k < length3; k++)
        {
            int id = chestplate[k];
            if (getPlayer().getItem(id) != -1)
            {
                item = getPlayer().getItem(id);
                break;
            }
        }
    }

    if (this.getMinecraft().thePlayer.inventory.armorInventory[3] == null)
    {
        int[] helmet;
        int length4 = (helmet = this.helmet).length;
        for (int l = 0; l < length4; l++)
        {
            int id = helmet[l];
            if (getPlayer().getItem(id) != -1)
            {
                item = getPlayer().getItem(id);
                break;
            }
        }
    }
    if (item != -1)
    {
        int slotId = item;
        getPlayerController().windowClick(0, slotId, 0, 1, this.getPlayer());
    }

    }



}
