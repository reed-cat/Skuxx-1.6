package xyz.erik.skuxx.mods.exploits;

import net.minecraft.item.ItemBow;
import net.minecraft.item.ItemSword;
import net.minecraft.nbt.NBTTagList;
import net.minecraft.network.play.client.C03PacketPlayer;
import net.minecraft.network.play.client.C07PacketPlayerDigging;
import net.minecraft.network.play.server.S12PacketEntityVelocity;
import net.minecraft.util.BlockPos;
import net.minecraft.util.EnumFacing;
import xyz.erik.api.mod.Mod;
import xyz.erik.skuxx.Skuxx;
import xyz.erik.skuxx.event.EventTarget;
import xyz.erik.skuxx.event.events.BobbingEvent;
import xyz.erik.skuxx.event.events.EventPacket;
import xyz.erik.skuxx.mods.Category;

public class

BowFly
extends Mod{




    private boolean next;
    public BowFly() {

        setCategory(Category.EXPLOITS);
    }
    @EventTarget
    private void onPacketSend(final EventPacket event) {
        if (event.getType() == EventPacket.Type.SEND) {
            if (event.getPacket() instanceof C03PacketPlayer) {
                if (isUsingBow()) {
                    C03PacketPlayer player = (C03PacketPlayer)event.getPacket();
                    player.setPitch(-90);

                    Skuxx.getInstance().getModManager().getMod("AntiVelocity").setCancelTicks(10);

                    C03PacketPlayer packet = (C03PacketPlayer)event.packet;
                    double addY = 2.0E-16D;
                    double posY = getPlayer().posY;
                    if (this.next) {
                        packet.setY(packet.getPositionY() + addY);
                        this.next = false;

                    }

                    if (getPlayer().getItemInUseDuration() == 4) {
                        getPlayer().stopUsingItem();
                        getPlayer().sendPacket(new C07PacketPlayerDigging(C07PacketPlayerDigging.Action.RELEASE_USE_ITEM, BlockPos.ORIGIN,EnumFacing.UP));
                        this.next = true;
                    }
                    getMinecraft().getTimer().timerSpeed = 0.2F;
                     if (this.getPlayer().motionY <= -0.20000000298023224D) {
                        player.setPitch(90.0F);
                    } else {
                        player.setPitch(-90.0F);
                    }


                    if (getMinecraft().gameSettings.keyBindForward.pressed) {

                         player.setPitch(60);
                    }

                    else if (getMinecraft().gameSettings.keyBindBack.pressed) {
                         player.setPitch(60);
                         player.setYaw(player.getYaw() - 180);
                    }
                } else {
                    getMinecraft().getTimer().timerSpeed = 1.0F;
                }
            }
        } else if (event.getType() == EventPacket.Type.TAKE) {
            if ((event.getPacket() instanceof S12PacketEntityVelocity))
            {
                S12PacketEntityVelocity packet = (S12PacketEntityVelocity)event.packet;
                if (this.getWorld().getEntityByID(packet.func_149412_c()) == this.getPlayer()) {
                    getPlayer().onGround = true;
                    boolean mov = (this.getPlayer().moveForward != 0.0F) || (this.getPlayer().moveStrafing != 0.0F);
                    S12PacketEntityVelocity tmp26_25 = packet;
                    tmp26_25.setMotionX(mov ? tmp26_25.getMotionX() : 0);
                    S12PacketEntityVelocity tmp45_44 = packet;
                    tmp45_44.setMotionY((int)(tmp45_44.getMotionY() * 1.0D));
                    S12PacketEntityVelocity tmp64_63 = packet;
                    tmp64_63.setMotionZ(mov ? tmp64_63.getMotionZ() : 0 );
                    this.getMinecraft().getTimer().timerSpeed = 0.5F;
                    getPlayer().onGround = false;
                    new Thread(new Runnable() {
                        @Override
                        public void run() {
                            try {
                                Thread.sleep(200);
                                getMinecraft().getTimer().timerSpeed = 0.2F;
                            }catch (InterruptedException e){}
                        }
                    }).start();
                }

            }

        }
    }




    private boolean isUsingBow() {
        return getPlayer().getHeldItem() != null && getPlayer().getHeldItem().getItem() != null && getPlayer().getHeldItem().getItem() instanceof ItemBow && getMinecraft().gameSettings.keyBindUseItem.getIsKeyPressed();
    }




}
